---------------------------------------------------------------------------------------------------
-- Authors:
-- Relic
-- Woprock
--
-- Description:
-- Updates definition of all military units to be able to capture site.
-- Can be redefined for various capture time length.
-- It's possible to force all units to behave like monks, if they receive "monk_capture_holy_site" ability and loose
-- ability "military_neutralize_holy_site"
---------------------------------------------------------------------------------------------------

AGS_MILITARY_SITES_MODULE = "AGS_MilitarySites"
AGS_MILITARY_SITES_MODIFIERS = { }
AGS_MILITARY_SITES_SCALE_MODIFIERS = { }
AGS_MILITARY_SITES_BP_MILITARY = { }
AGS_MILITARY_SITES_BP_KINGS = { }

---------------------------------------------------------------------------------------------------
-- Delegates:
---------------------------------------------------------------------------------------------------

Core_RegisterModule(AGS_MILITARY_SITES_MODULE)	

function AGS_MilitarySites_UpdateModuleSettings()
	AGS_Print("AGS_MilitarySites_UpdateModuleSettings")
	if not AGS_GLOBAL_SETTINGS.ReligiousSettings.MilitarySites then
		Core_UnregisterModule(AGS_MILITARY_SITES_MODULE)
	end
end

function AGS_MilitarySites_PresetFinalize()
	AGS_Print("AGS_MilitarySites_PresetFinalize")
	if AGS_GLOBAL_SETTINGS.ReligiousSettings.MilitaryCaptureAge == AGS_GS_AGE_NONE then
		return
	elseif AGS_GLOBAL_SETTINGS.ReligiousSettings.MilitaryCaptureAge == AGS_GS_AGE_DARK then
		AGS_MilitarySites_ApplyRates(BP_GetSquadBlueprintsWithType(AGS_BP_MILITARY))
		AGS_MilitarySites_ApplyRates(BP_GetSquadBlueprintsWithType(AGS_BP_KING))		
	elseif AGS_GLOBAL_SETTINGS.ReligiousSettings.MilitaryCaptureAge == AGS_GS_AGE_FEUDAL then
		AGS_MILITARY_SITES_BP_MILITARY = BP_GetSquadBlueprintsWithType(AGS_BP_MILITARY)
		AGS_MILITARY_SITES_BP_KINGS = BP_GetSquadBlueprintsWithType(AGS_BP_KING)
		for _, player in pairs(PLAYERS) do
			AGS_MILITARY_SITES_MODIFIERS[player.id] = { }
		end
		-- wait for later to apply change
	end
	if AGS_GLOBAL_SETTINGS.ReligiousSettings.SiteGoldIncome >= 100 then	
		AGS_MilitarySites_ScaleSitesStatic()	
	elseif AGS_GLOBAL_SETTINGS.ReligiousSettings.SiteGoldIncome < 100 then
		for _, player in pairs(PLAYERS) do
			AGS_MILITARY_SITES_SCALE_MODIFIERS[player.id] = { 
				[AGS_GS_AGE_FEUDAL] = false,
				[AGS_GS_AGE_CASTLE] = false,
				[AGS_GS_AGE_IMPERIAL] = false, 
			}
		end	
	end
end

function AGS_MilitarySites_OnPlay()
	AGS_Print("AGS_MilitarySites_OnPlay")
	Rule_AddGlobalEvent(AGS_MilitarySites_OnConstructionComplete, GE_ConstructionComplete)
	Rule_AddGlobalEvent(AGS_MilitarySites_OnUpgradeComplete, GE_UpgradeComplete)
end

function AGS_MilitarySites_OnGameOver()
	AGS_Print("AGS_MilitarySites_OnGameOver")
	Rule_RemoveGlobalEvent(AGS_MilitarySites_OnConstructionComplete)
	Rule_RemoveGlobalEvent(AGS_MilitarySites_OnUpgradeComplete)
end

---------------------------------------------------------------------------------------------------
-- Callbacks:
---------------------------------------------------------------------------------------------------

function AGS_MilitarySites_ScaleSitesStatic()
	if AGS_GLOBAL_SETTINGS.ReligiousSettings.SiteGoldIncome <= 100 then
		return
	end
	local scaleValue = AGS_GLOBAL_SETTINGS.ReligiousSettings.SiteGoldIncome / 100
	
	for _, player in pairs(PLAYERS) do	
		Player_SetStateModelFloat(player.id, "sacred_site_gold_income_per_second", 1.667 * scaleValue)	
	end
end

function AGS_MilitarySites_ScaleSitesDynamic(playerId, age)
	AGS_Print("AGS_MilitarySites_ScaleSitesDynamic")
	local mulAgeValue = 0
	if age == AGS_GS_AGE_FEUDAL and AGS_MILITARY_SITES_SCALE_MODIFIERS[playerId][age] ~= true then
		AGS_MILITARY_SITES_SCALE_MODIFIERS[playerId][age] = true
		mulAgeValue = 1
	elseif age == AGS_GS_AGE_CASTLE and AGS_MILITARY_SITES_SCALE_MODIFIERS[playerId][age] ~= true then
		AGS_MILITARY_SITES_SCALE_MODIFIERS[playerId][age] = true
		mulAgeValue = 2		
	elseif age == AGS_GS_AGE_IMPERIAL and AGS_MILITARY_SITES_SCALE_MODIFIERS[playerId][age] ~= true then
		AGS_MILITARY_SITES_SCALE_MODIFIERS[playerId][age] = true	
		mulAgeValue = 3		
	end

	if mulAgeValue == 0 then
		return
	end
	local mulScaleValue = AGS_GLOBAL_SETTINGS.ReligiousSettings.SiteGoldIncome
		
	AGS_Print("AGS_MilitarySites_ScaleSitesDynamic end")
	AGS_Print(1.667 + 1.667 * mulAgeValue * mulScaleValue)
	Player_SetStateModelFloat(playerId, "sacred_site_gold_income_per_second", 
		1.667 + 1.667 * mulAgeValue * mulScaleValue)
end

function AGS_MilitarySites_OnUpgradeComplete(context)
	if context == nil or context.executer == nil or context.upgrade == nil then
		return
	end
	local entity_id = context.executer
	if scartype(entity_id) ~= ST_ENTITY or World_OwnsEntity(entity_id) then
		return
	end
	local owner = Entity_GetPlayerOwner(entity_id)
	if owner == nil then 
		return
	end
	local player = Core_GetPlayersTableEntry(owner)
	if player == nil or player.raceName ~= AGS_CIV_ABBASID then 
		return
	end
	local pbg = context.upgrade
	
	if 	BP_IsUpgradeOfType(pbg, "abbasid_wing_upgrade") then
		AGS_MilitarySites_OnAgeUp(player, AGS_GS_AGE_FEUDAL)
	elseif BP_IsUpgradeOfType(pbg, "abbasid_wing_upgrade_feudal") then
		AGS_MilitarySites_OnAgeUp(player, AGS_GS_AGE_CASTLE)
	elseif BP_IsUpgradeOfType(pbg, "abbasid_wing_upgrade_castle") then
		AGS_MilitarySites_OnAgeUp(player, AGS_GS_AGE_IMPERIAL)
	end		
end

function AGS_MilitarySites_OnConstructionComplete(context)	
	if context == nil or context.player == nil or context.entity == nil then 
		return
	end	
	if World_OwnsEntity(context.entity) then
		return
	end	
	local player = Core_GetPlayersTableEntry(context.player)
	-- Eliminated players are not interesting.
	if player.isEliminated or player.raceName == AGS_CIV_ABBASID then
		return
	end
	-- We are looking only for landmarks.
	if not AGS_IsALandmark(context.entity) then
		return		
	end
	if Entity_IsOfType(context.entity, "wonder_dark_age") then
		AGS_MilitarySites_OnAgeUp(player, AGS_GS_AGE_FEUDAL)
	elseif Entity_IsOfType(context.entity, "wonder_feudal_age") then
		AGS_MilitarySites_OnAgeUp(player, AGS_GS_AGE_CASTLE)
	elseif Entity_IsOfType(context.entity, "wonder_castle_age") then
		AGS_MilitarySites_OnAgeUp(player, AGS_GS_AGE_IMPERIAL)
	end	
end

-- note the name is of age that is reached, while checks are for entities of age that is left
-- relic naming scheme is strange
function AGS_MilitarySites_OnAgeUp(player, age)
	if AGS_GLOBAL_SETTINGS.ReligiousSettings.MilitaryCaptureAge == age then
	AGS_Print("AGS_MilitarySites_OnAgeUp capture")
		AGS_MilitarySites_ApplyRatesSingle(AGS_MILITARY_SITES_BP_MILITARY, player.id)
		AGS_MilitarySites_ApplyRatesSingle(AGS_MILITARY_SITES_BP_KINGS, player.id)
	end
	if AGS_GLOBAL_SETTINGS.ReligiousSettings.SiteGoldIncome < 100 then	
	AGS_Print("AGS_MilitarySites_OnAgeUp income")
		AGS_MilitarySites_ScaleSitesDynamic(player.id, age)	
	end	
end

---------------------------------------------------------------------------------------------------
-- Functions:
---------------------------------------------------------------------------------------------------
-- This function changes rates for capture and revert of military sites to single player [for feudal and later ages].
function AGS_MilitarySites_ApplyRatesSingle(bps, playerId)
	for _, sbp in pairs(bps) do 
		if AGS_MILITARY_SITES_MODIFIERS[playerId][sbp.PropertyBagGroupID] == nil then
			AGS_MILITARY_SITES_MODIFIERS[playerId][sbp.PropertyBagGroupID] = true
			AGS_MilitarySites_ApplyAddModifier(playerId, sbp, "capture_rate_squad_modifier", AGS_GLOBAL_SETTINGS.ReligiousSettings.MilitarySitesUpRate)
			AGS_MilitarySites_ApplyMulModifier(playerId, sbp, "capture_revert_rate_squad_modifier", AGS_GLOBAL_SETTINGS.ReligiousSettings.MilitarySitesDownRate)
		end
	end
end
-- This function changes rates for capture and revert of military sites to all.
function AGS_MilitarySites_ApplyRates(bps)
	for _, sbp in pairs(bps) do 
		if AGS_MILITARY_SITES_MODIFIERS[sbp.PropertyBagGroupID] == nil then
			AGS_MILITARY_SITES_MODIFIERS[sbp.PropertyBagGroupID] = true
			for _, player in pairs(PLAYERS) do	
				AGS_MilitarySites_ApplyAddModifier(player.id, sbp, "capture_rate_squad_modifier", AGS_GLOBAL_SETTINGS.ReligiousSettings.MilitarySitesUpRate)
				AGS_MilitarySites_ApplyMulModifier(player.id, sbp, "capture_revert_rate_squad_modifier", AGS_GLOBAL_SETTINGS.ReligiousSettings.MilitarySitesDownRate)
			end
		end
	end
end
-- Apply function.
function AGS_MilitarySites_ApplyAddModifier(player_id, modifier_sbp, modifier_type, modifier_value)
	Modifier_ApplyToPlayer(Modifier_Create(MAT_SquadType, modifier_type, MUT_Addition, false, modifier_value, modifier_sbp), player_id, 0.0)
end	
-- Apply function.
function AGS_MilitarySites_ApplyMulModifier(player_id, modifier_sbp, modifier_type, modifier_value)
	Modifier_ApplyToPlayer(Modifier_Create(MAT_SquadType, modifier_type, MUT_Multiplication, false, modifier_value, modifier_sbp), player_id, 0.0)
end	